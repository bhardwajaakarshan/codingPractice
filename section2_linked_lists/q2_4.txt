# Partition: Write code to parittion a linked list around a value x, such that all node less than x come before all nodes greater than or equal to x. If x is contained within the list, the values of x only need to be after the elements less than x. 

public Node partition(LinkedList l, int partition){
	// Can we make this a doubly linked list and build the head and tail.
	LinkedListNode leftstart = null;
	LinkedListNode leftpointer = null;
	LinkedListNode rightpointer = null;
	LinkedListNode rightstart = null;
	if (l.head == null) return null;
	LinkedListNode curr = l.head;
	while (curr.next != null){
		if (curr.data < partition){
			if (leftpointer == null){
				leftpointer = curr;
				leftstart = curr;
			} else {
				leftpointer.next = curr;
				leftpointer = leftpointer.next;
			}
		} else {
			if (rightpointer == null){
				rightstart = curr;
				rightpointer = rightstart;
			} else {
				rightpointer.next = curr;
				rightpointer = rightpointer.next;
			}
		}
	}
	if (leftstart == null) return rightstart;
	leftpointer.next = rightstart;
	return leftstart;
}

// Can also make a doubly linked list (cleaner)